@page "/signuppage"
@using System.Net.Http.Json
@using BrainBurst.Shared.DTO_s
@inject HttpClient httpClient


<div class="h-screen md:flex relative f-family">
    <div class="overflow-hidden md:flex w-1/2 justify-around items-center hidden logimg">
        <h6 class="text-[33px] text-white p-6 absolute bottom-6 left-3 font-bold">BrainBurst</h6>
	</div>
	<div class="flex md:w-1/2 justify-around py-5 items-center">
		<div class="bg-white">
			<h1 class="text-gray-800 font-[500] text-[37px] mb-6 mt-10">Hello,<br />Create your account :)</h1>
            <div class="flex my-10 justify-between my-3">
                <p class="text-[22px] font-[600] text-gray-800">Sign up</p>
                <span class="text-gray-600 text-[18px] font-[500] mt-1">OR</span>
                <button>
                    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" class="w-7 h-7"
                     viewBox="0 0 48 48">
                    <defs>
                        <path id="a"
                              d="M44.5 20H24v8.5h11.8C34.7 33.9 30.1 37 24 37c-7.2 0-13-5.8-13-13s5.8-13 13-13c3.1 0 5.9 1.1 8.1 2.9l6.4-6.4C34.6 4.1 29.6 2 24 2 11.8 2 2 11.8 2 24s9.8 22 22 22c11 0 21-8 21-22 0-1.3-.2-2.7-.5-4z" />
                    </defs>
                    <clipPath id="b">
                        <use xlink:href="#a" overflow="visible" />
                    </clipPath>
                    <path clip-path="url(#b)" fill="#FBBC05" d="M0 37V11l17 13z" />
                    <path clip-path="url(#b)" fill="#EA4335" d="M0 11l17 13 7-6.1L48 14V0H0z" />
                    <path clip-path="url(#b)" fill="#34A853" d="M0 37l30-23 7.9 1L48 0v48H0z" />
                    <path clip-path="url(#b)" fill="#4285F4" d="M48 48L17 24l-4-3 35-10z" />
                </svg>
                </button>
            </div>
			

            <div class="mb-7 flex border-b-2">
                <i class='bx bx-rename text-[20px] mr-4 mt-[8px] bx-tada-hover text-gray-400'></i>
            
                <div class="relative">
                    <input type="text" @bind="@registrationUser.FullName" id="fullName" placeholder="kamster" name="fullName" class="h-10 text-[black] bg-transparent placeholder-transparent peer focus:outline-none">
                    <label for="fullName" class="absolute left-0 -top-3.5 text-[black] text-[15px] transition-all duration-300 peer-placeholder-shown:text-base peer-placeholder-shown:text-black peer-placeholder-shown:top-2 peer-focus:-top-3.5 peer-focus:text-[black] peer-focus:text-sm">Fullname</label>
                </div>
            </div>

            <div class="mb-7 flex border-b-2">
                <i class='bx bx-user-circle text-[20px] mr-4 mt-[8px] bx-tada-hover text-gray-400'></i>

                <div class="relative">
                    <input type="text" @bind="@registrationUser.UserName" placeholder="kamster" class="h-10 text-[black] bg-transparent placeholder-transparent peer focus:outline-none" id="username" name="username">
                    <label for="username" class="absolute left-0 -top-3.5 text-[black] text-[15px] transition-all duration-300 peer-placeholder-shown:text-base peer-placeholder-shown:text-black peer-placeholder-shown:top-2 peer-focus:-top-3.5 peer-focus:text-[black] peer-focus:text-sm">Username</label>
                </div>
            </div>

            <div class="mb-7 flex border-b-2">
                <i class='bx bx-envelope text-[20px] mr-4 mt-[8px] bx-tada-hover text-gray-400'></i>

                <div class="relative">
                    <input type="email" @bind="@registrationUser.Email" placeholder="kamster" class="h-10 text-[black] bg-transparent placeholder-transparent peer focus:outline-none" id="email" name="email">
                    <label for="email" class="absolute left-0 -top-3.5 text-[black] text-[15px] transition-all duration-300 peer-placeholder-shown:text-base peer-placeholder-shown:text-black peer-placeholder-shown:top-2 peer-focus:-top-3.5 peer-focus:text-[black] peer-focus:text-sm">Email</label>
                </div>
            </div>


            <div class="mb-7 flex border-b-2 justify-between">
                <div class="flex">
                    <i class='bx bxs-lock text-[20px] bx-tada-hover text-gray-400 mr-4 mt-[8px]'></i>

                    <div class="relative">
                        <input type="@(showPassword ? "text" : "password")" @bind="@registrationUser.Password" placeholder="kamster" class=" h-10 text-[black] bg-transparent placeholder-transparent peer focus:outline-none" id="password" name="password">
                        <label for="password" class="absolute left-0 -top-3.5 text-[black] text-[15px] transition-all duration-300 peer-placeholder-shown:text-base peer-placeholder-shown:text-black peer-placeholder-shown:top-2 peer-focus:-top-3.5 peer-focus:text-[black] peer-focus:text-sm">Password</label>
                    </div>
                </div>

                <i class=@(showPassword ? "fa-regular fa-eye mt-[12px] text-black text-[18px]" : "fa-regular fa-eye-slash mt-[12px] text-black text-[18px]") @onclick="TogglePasswordVisibility"></i>
            </div>

            <div class="flex border-b-2 justify-between">
                <div class="flex">
                    <i class='bx bxs-lock text-[20px] bx-tada-hover text-gray-400 mr-4 mt-[8px]'></i>

                    <div class="relative">
                        <input type="@(showPassword ? "text" : "password")" @bind="@registrationUser.ConfirmPassword" placeholder="kamster" class=" h-10 text-[black] bg-transparent placeholder-transparent peer focus:outline-none" id="confirmPassword" name="confirmPassword">
                        <label for="password" class="absolute left-0 -top-3.5 text-[black] text-[15px] transition-all duration-300 peer-placeholder-shown:text-base peer-placeholder-shown:text-black peer-placeholder-shown:top-2 peer-focus:-top-3.5 peer-focus:text-[black] peer-focus:text-sm">Confirm password</label>
                    </div>
                </div>
                <i class=@(showPassword ? "fa-regular fa-eye mt-[12px] text-black text-[18px]" : "fa-regular fa-eye-slash mt-[12px] text-black text-[18px]") @onclick="TogglePasswordVisibility"></i>
            </div>



            <button type="submit" @onclick="HandleSignUp" class=" mt-12 relative inline-flex items-center justify-center p-4 px-6 py-4 w-full overflow-hidden font-medium text-white bg-purple-500 transition duration-300 ease-out border-2 border-purple-500 rounded-full shadow-xl group">
                <span class="absolute inset-0 flex items-center justify-center w-full h-full text-white duration-300 -translate-x-full bg-purple-500 group-hover:translate-x-0 ease">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"></path></svg>
                </span>
                <span class="absolute flex items-center justify-center w-full h-full text-white transition-all duration-300 transform group-hover:translate-x-full ease">Sign up</span>
                <span class="relative invisible">Sign up</span>
            </button>
            <div class="align-items-center text-center my-6">
                <button @onclick="NavigateToLogin" class="text-[#808080] font-[400] text-[16px]">
                    Log in your account ->
                </button>
            </div>
		</div>
	</div>
</div>


@code {
    private RegistrationUserDTO registrationUser = new RegistrationUserDTO();

    private bool showPassword = false;

    private async Task HandleSignUp()
    {
        var response = await httpClient.PostAsJsonAsync("api/User/CreateUser", registrationUser);

        if (response.IsSuccessStatusCode)
        {
            // NavigationManager.NavigateTo("/login");
            Console.WriteLine("be updated");
        }
        else
        {
            Console.WriteLine("Can't be updated");
        }
    }

    private void TogglePasswordVisibility()
    {
        showPassword = !showPassword;
    }

    private void NavigateToLogin()
    {
        NavigationManager.NavigateTo("/loginpage");
    }
}